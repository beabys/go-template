// Code generated by mockery v2.42.0. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
	v1 "gitlab.com/beabys/go-http-template/internal/api/v1"
)

// ServerInterface is an autogenerated mock type for the ServerInterface type
type ServerInterface struct {
	mock.Mock
}

// HelloWorld provides a mock function with given fields: w, r
func (_m *ServerInterface) HelloWorld(w http.ResponseWriter, r *http.Request) *v1.Response {
	ret := _m.Called(w, r)

	if len(ret) == 0 {
		panic("no return value specified for HelloWorld")
	}

	var r0 *v1.Response
	if rf, ok := ret.Get(0).(func(http.ResponseWriter, *http.Request) *v1.Response); ok {
		r0 = rf(w, r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1.Response)
		}
	}

	return r0
}

// NewServerInterface creates a new instance of ServerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewServerInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *ServerInterface {
	mock := &ServerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

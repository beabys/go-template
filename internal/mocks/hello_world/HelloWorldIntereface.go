// Code generated by mockery v2.42.0. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// HelloWorldIntereface is an autogenerated mock type for the HelloWorldIntereface type
type HelloWorldIntereface struct {
	mock.Mock
}

// GetHelloWorld provides a mock function with given fields: r
func (_m *HelloWorldIntereface) GetHelloWorld(r *http.Request) error {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for GetHelloWorld")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*http.Request) error); ok {
		r0 = rf(r)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewHelloWorldIntereface creates a new instance of HelloWorldIntereface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewHelloWorldIntereface(t interface {
	mock.TestingT
	Cleanup(func())
}) *HelloWorldIntereface {
	mock := &HelloWorldIntereface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

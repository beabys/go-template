stages:
  - test
  - docs
  - buildx
  - build


unit_tests:
  stage: test
  image: golang:1.23.3-bullseye
  script:
    - make unit-coverage
  artifacts:
    expire_in: 1 day
    paths:
      - unit.html
      - rspec.xml
    reports:
      junit: rspec.xml

docs:
  stage: docs
  image: node:hydrogen-slim
  script:
    - mkdir -p ./docs && npm i -g @redocly/cli@latest && redocly build-docs -o ./docs/index.html ./openapi.yaml
  artifacts:
    expire_in: 1 day
    paths:
      - docs/index.html


buildx:
  image: docker:git
  stage: buildx
  variables:
    GIT_STRATEGY: none
  artifacts:
    paths:
      - buildx
    expire_in: 1 hour
  services:
    - docker:dind
  script:
    - export DOCKER_BUILDKIT=1
    - git clone https://github.com/docker/buildx ./docker-buildx
    - docker build --platform=local -o . ./docker-buildx
  only:
    - tags

build_image:
  image: docker:19.03.12
  stage: build
  services:
    - name: docker:19.03.12-dind
      command: ["--experimental"]
  before_script:
    - mkdir -p ~/.docker/cli-plugins
    - mv buildx ~/.docker/cli-plugins/docker-buildx
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    # docker login needs the password to be passed through stdin for security
    # we use $CI_JOB_TOKEN here which is a special token provided by GitLab
    - echo -n $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    # - docker version
    # - docker info
  script:
    - docker buildx create --use
    # - docker buildx build -f ./build/app/Dockerfile --platform linux/arm/v7,linux/arm64,linux/amd64 -t $CI_REGISTRY/beabys/starwars-go:latest --push .
    - docker buildx build -f ./builds/app/Dockerfile --platform linux/arm64,linux/amd64 -t $CI_REGISTRY/beabys/go-template:$CI_COMMIT_TAG --push .
  after_script:
    - docker logout $CI_REGISTRY
  only:
    - tags

